#!/usr/bin/env python3
import sys
import argparse
import time

import gonullu


def kullanim():
    print("""
Kullanim - Usage

Asagidaki satir, docker icindeki /etc/pisi/pisi.conf icinde bulunan
-j parametresini verecegimiz rakam ile degistirir.
The command below replaces the -j parameter in the file in the  docker
image /etc/pisi/pisi.conf with the number given from command line.

sudo gonullu -j 24


Asagidaki satir, docker icin islemcinin %70'ini, fiziksel hafizanin
%25'ini  ayirir.
The command below reserves %70 of cpu and %25 of physical memory for
docker.

sudo gonullu --cpu=70 --memory=25

""")
    sys.exit()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='This is pisilinux volunteer application')
    parser.add_argument('-k', '--kullanim', action="store_true", dest="kullanim", default=False)
    parser.add_argument('-ml', '--memory-limit', action='store', dest='memory_limit', default=50, type=int)
    parser.add_argument('-msl', '--memory-swap-limit', action='store', dest='memswap_limit', default=50, type=int)
    parser.add_argument('-cs', '--cpu-set', action='store', dest='cpu_set', default=1, type=int)
    parser.add_argument('-e', '--email', action='store', dest='email', default='ilkermanap@gmail.com', type=str)

    args = parser.parse_args()
    print(args)
    pisi = gonullu

    if args.kullanim:
        kullanim()
    else:
        farm = gonullu.Farm('http://ciftlik.pisilinux.org/ciftliktest', args.email)
        volunteer = gonullu.Volunteer(args)
        while 1:
            response = farm.get_package()
            if response is -1:
                print("5 sn uyuyalım")
                time.sleep(5)
            else:
                volunteer.get_package_farm(response)
                while 1:
                    if volunteer.check():
                        # container bulunamadı. İşlem bitti.
                        print('Derleme işlemi bitti yeni paket beklemek için sıraya giriliyor.')
                        if farm.send_file(response['package_name']):
                            success = int(open('/tmp/gonullu/%s/%s.bitti' % (response['package_name'],
                                                                             response['package_name']), 'r').read())
                            farm.get('updaterunning?id=%s&state=%s' % (response['queue_id'], success), json=False)
                            volunteer.remove(response['package_name'])
                        break
                    else:
                        # containr bulundu. İşlem sürüyor.
                        print('Derleme işlemi devam ediyor.')
                        time.sleep(10)
